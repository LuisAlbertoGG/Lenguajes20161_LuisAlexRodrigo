#lang plai

#| ejerccio #1
#             Array - Definir un tipo de dato Array que tenga un constructor de tipo MArray. El entero sirve para definir
#el tama˜no del arreglo
|#



(define-type Array
  [MArray (n number?) (lista list?)])


#| ejerccio #2


|#

#| ejerccio #3


|#


#| ejerccio #4
#             Position - Define un tipo de dato llamado Position que tenga un constructor de tipo 2D-Point que toma
#dos n´umeros reales que indican una posici´on en el plano cartesiano, i.e.
|#
(define-type Position
  [2D-Point (x number?) (y number?)])
  
  >(test (2D-Point (sqrt 9) (- 5 8)) (2D-Point 3 -3) )
  
  >(test (2D-Point 0 1) (2D-Point 0 1) )
  
  > (test (2D-Point 0 0) (2D-Point 0 0) )
  
  > (test (2D-Point 10 -0) (2D-Point 10 -0) )
  
  > (test (2D-Point (* 1 3) 5) (2D-Point 3 5) )


#| ejerccio #5


|#


#| ejerccio #6


|#


#| ejerccio #7
#              MArray2MList - Dado un arreglo de tipo MArray, regresar una lista de tipo MList que contenga todos los
#elementos del arreglo original, i.e.
|#




#| ejerccio #8


|#


#| ejerccio #9


|#


#| ejerccio #10


|#



#| ejerccio #11


|#



#| ejerccio #12


|#


#| ejerccio #13


|#


#| ejerccio #14


|#



#| ejerccio #15


|#



#| ejerccio #16


|#


#| ejerccio #17


|#


#| ejerccio #18


|#


